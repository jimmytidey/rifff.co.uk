package {	import fl.controls.TextInput;	import flash.events.*;	import flash.display.*;	import flash.text.TextField;	import fl.controls.Button;	import flash.media.SoundMixer;	import flash.media.SoundChannel;	public class Score extends MovieClip{		public var score:Array = new Array();				public function generate(jsonData, grid, soundContainer, number_of_steps, step_time) {								//declare the arrays 			for (var bank_index:int =0; bank_index < jsonData['banks'].length; bank_index++) {				score[bank_index] = new Array() 							for (var bank_option_index:int =0; bank_option_index < jsonData['banks'][bank_index]['bank_options'].length; bank_option_index++) {					score[bank_index][bank_option_index] = new Array();					for (var step_number:int =0; step_number < number_of_steps; step_number++) {						score[bank_index][bank_option_index][step_number] = new Array();						score[bank_index][bank_option_index][step_number]['action'] = '';						score[bank_index][bank_option_index][step_number]['offset'] = '0';							if (grid[bank_index][step_number][bank_option_index] == 100) { 							grid[bank_index][step_number]['certain_play'] = bank_option_index;														trace("CERTAIN PLAY bank index" + bank_index + " bank option index " + bank_option_index + " step number" + step_number); 						}					}				}			}						//now set when the arrays should play 			for (bank_index=0; bank_index < jsonData['banks'].length; bank_index++) {				for (step_number=0; step_number < number_of_steps; step_number++) {														//if there is one step that is going to play, play it and stop everything else 					if(grid[bank_index][step_number]['certain_play'] != undefined) {						for (bank_option_stop_index=0; bank_option_stop_index < jsonData['banks'][bank_index]['bank_options'].length; bank_option_stop_index++) {							score[bank_index][bank_option_stop_index][step_number]['action'] = "stop";						}												var certain_number = grid[bank_index][step_number]['certain_play'];						if (jsonData['banks'][bank_index]['bank_options'][certain_number]['loop'] == "true") {							score[bank_index][certain_number][step_number]['action'] = "loop";						}						else { 							score[bank_index][certain_number][step_number]['action'] = "play";						}												//this to work out how long the step will play for						if(jsonData['banks'][bank_index]['bank_options'][certain_number]['overplay'] == "true") { 														//look forward to see when voice stealing will occur							for (var test_step = step_number+1; test_step < number_of_steps; test_step ++) {  								if (grid[bank_index][test_step]['certain_play']) { 									break;    								}							}														var voice_steal_time = (step_time)  * (test_step - step_number); 														var playback_time:Number;							var duration:Number;														if (jsonData['banks'][bank_index]['bank_options'][certain_number]['file_location'] != undefined) { 								var file_location = jsonData['banks'][bank_index]['bank_options'][certain_number]['file_location'];								var file_location_array:Array = file_location.split(".");								var clean_file_location = file_location_array[0];								}														if (soundContainer[clean_file_location].length != undefined) {  								playback_time = (soundContainer[clean_file_location].length);							}							else {playback_time = 0;}														if (jsonData['banks'][bank_index]['bank_options'][certain_number]['loop'] == "true" && jsonData['banks'][bank_index]['bank_options'][certain_number]['overplay']) { 								duration = voice_steal_time;							}							else if (playback_time < voice_steal_time)  {duration = playback_time;}														else {duration = voice_steal_time;}														trace('DURATION' + duration);														score[bank_index][certain_number][step_number]['time'] = duration;							trace("SETTING TIME :" +bank_index + " - " + certain_number + "  step:" + step_number + 'action: '+ score[bank_index][certain_number][step_number]['action'] );						}					}				}			}								for (bank_index=0; bank_index < jsonData['banks'].length; bank_index++) {				for (bank_option_index=0; bank_option_index < jsonData['banks'][bank_index]['bank_options'].length; bank_option_index++) {					if (jsonData['banks'][bank_index]['bank_options'][bank_option_index]['overplay'] == 'true') {						for (step_number=0; step_number < number_of_steps; step_number++) {							if (score[bank_index][bank_option_index][step_number]['action'] == "play" || score[bank_index][bank_option_index][step_number]['action'] == "loop") { 								for (var check_step = step_number; check_step <= number_of_steps; check_step++) {																			var time_forward = int((check_step - step_number) * step_time);									var sample_length = int(score[bank_index][bank_option_index][step_number]['time']);																	if (sample_length > time_forward) {										var offset = time_forward										trace("WRITING OFFSET:" +bank_index + " - " + bank_option_index + "  step:" + check_step + " val" + offset );										var action = score[bank_index][bank_option_index][step_number]['action'];										score[bank_index][bank_option_index][check_step]['offset'] = offset;										score[bank_index][bank_option_index][check_step]['action'] = action;																			}																}							}						}						//work out what we need to stop 						//else { 							//score[bank_index][bank_option_index][step_number]['action'] = "stop";						//	trace("STOP bank index:" + bank_index + "  bank option:" + bank_option_index + "  step" +step_number);						//}					}				}			}				}	}}